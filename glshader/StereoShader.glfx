////GLOBAL
#version 330

#include "hlsl_glsl.fxh"

////VERTEX

in vec3 vPosition;
in vec2 tc;

out vec2 tex0;

////FRAGMENT

uniform sampler2D  Texture0; // Render buffer with left eye on the top half, and right eye on the bottom half

in vec2 tex0;

out vec4 color;

////vs_main_int

void main()
{
   gl_Position = vec4(vPosition.x, -vPosition.y, 0.0, 1.0);
   tex0 = float2(tc.x, tc.y);
}

////ps_main_int

void main()
{
   if (frac(gl_FragCoord.y*0.5) < 0.5) {
      color = tex2D(Texture0, vec2(tex0.x,0.5*tex0.y));
   }
   else {
      color = tex2D(Texture0, vec2(tex0.x,0.5*tex0.y + 0.5));
   }
}

////ps_main_flipped_int

void main()
{
   if (frac(gl_FragCoord.y*0.5) < 0.5) {
      color = tex2D(Texture0, vec2(tex0.x,0.5*tex0.y + 0.5));
   }
   else {
      color = tex2D(Texture0, vec2(tex0.x,0.5*tex0.y));
   }
}

////vs_main_amd

void main()
{
   gl_Position = vec4(vPosition.x*2.0-1.0, 1.0-vPosition.y*2.0,0.0,1.0);
   tex0 = float2(tc.x, tc.y);
}

////ps_main_amd

uniform float eye;

void main()
{
   if (eye>1.5) {
      color = tex2D(Texture0, vec2(tex0.x,tex0.y));
   } else if (eye<0.5) {
      color = tex2D(Texture0, vec2(0.5*tex0.x,tex0.y));
   } else {
      color = tex2D(Texture0, vec2(0.5+0.5*tex0.x,tex0.y));
   }
}

////TECHNIQUES

stereo_Int:P0:vs_main_int():ps_main_int()
stereo_Flipped_Int:P0:vs_main_int():ps_main_flipped_int()
stereo_AMD_DEBUG:P0:vs_main_amd():ps_main_amd()
